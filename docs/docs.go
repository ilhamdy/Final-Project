// Code generated by swaggo/swag. DO NOT EDIT.

package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "ilhamdy",
            "email": "ilhamdy.18@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/comments": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all comments with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Get all comments",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataGetComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageComment"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageComment"
                        }
                    }
                }
            }
        },
        "/comments/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a comment by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Get a comment by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Photo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataGetComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageComment"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageComment"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageComment"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a comment by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Update a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Comment",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.UpdateComment"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataUpdatedComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageComment"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageComment"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageComment"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "create a comment with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "create a comment",
                "parameters": [
                    {
                        "description": "Create Comment",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.CreateComment"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataCreatedComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageComment"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageComment"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a comment by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "comments"
                ],
                "summary": "Delete a comment",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Comment ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageDeletedComment"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageComment"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageComment"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageComment"
                        }
                    }
                }
            }
        },
        "/photos": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all photos with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Get all photos",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataGetPhoto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessagePhoto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessagePhoto"
                        }
                    }
                }
            }
        },
        "/photos/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a photo by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Get a photo by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Photo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataGetPhoto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessagePhoto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessagePhoto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessagePhoto"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a photo by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Update a photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Photo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Photo",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.UpdatePhoto"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataUpdatedPhoto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessagePhoto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessagePhoto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessagePhoto"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a photo with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Create a photo",
                "parameters": [
                    {
                        "description": "Create Photo",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.CreatePhoto"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataCreatedPhoto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessagePhoto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessagePhoto"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a photo by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "photos"
                ],
                "summary": "Delete a photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Photo ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageDeletedPhoto"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessagePhoto"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessagePhoto"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessagePhoto"
                        }
                    }
                }
            }
        },
        "/socialmedia": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get all social media with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedia"
                ],
                "summary": "Get all social media",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataGetSocialMedia"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageSocialMedia"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageSocialMedia"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Create a social media with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedia"
                ],
                "summary": "Create a social media",
                "parameters": [
                    {
                        "description": "Create Social Media",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.CreateSocialMedia"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataCreatedSocialMedia"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageSocialMedia"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageSocialMedia"
                        }
                    }
                }
            }
        },
        "/socialmedia/{id}": {
            "get": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Get a social media by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedia"
                ],
                "summary": "Get a social media by Id",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SocialMedia ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataGetSocialMedia"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageSocialMedia"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageSocialMedia"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageSocialMedia"
                        }
                    }
                }
            },
            "put": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Update a social media by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedia"
                ],
                "summary": "Update a social media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SocialMedia ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Update Social Media",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.UpdateSocialMedia"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataUpdatedSocialMedia"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageSocialMedia"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageSocialMedia"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageSocialMedia"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "description": "Delete a social media by id with authentication user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "socialmedia"
                ],
                "summary": "Delete a social media",
                "parameters": [
                    {
                        "type": "string",
                        "description": "SocialMedia ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageDeletedSocialMedia"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageSocialMedia"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageSocialMedia"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageSocialMedia"
                        }
                    }
                }
            }
        },
        "/users/login": {
            "post": {
                "description": "Authentication a user and retrieve a token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Login a user",
                "parameters": [
                    {
                        "description": "Login User",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.LoginUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataLoggedinUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageUser"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageUser"
                        }
                    }
                }
            }
        },
        "/users/register": {
            "post": {
                "description": "register a new user and return user data",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "users"
                ],
                "summary": "Register a new user",
                "parameters": [
                    {
                        "description": "Register User",
                        "name": "json",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/utils.RegisterUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseDataRegisteredUser"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageUser"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/utils.ResponseMessageUser"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "utils.CreateComment": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "A comment"
                },
                "photo_id": {
                    "type": "string",
                    "example": "photo-123"
                }
            }
        },
        "utils.CreatePhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "A caption"
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://www.example.com/image.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "A Title"
                }
            }
        },
        "utils.CreateSocialMedia": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "Example"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.example.com/johndoe"
                }
            }
        },
        "utils.CreatedComment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "the created at generated here"
                },
                "id": {
                    "type": "string",
                    "example": "here is the generated comment id"
                },
                "message": {
                    "type": "string",
                    "example": "A comment"
                },
                "photo_id": {
                    "type": "string",
                    "example": "here is the generated photo id"
                },
                "user_id": {
                    "type": "string",
                    "example": "here is the generated user id"
                }
            }
        },
        "utils.CreatedPhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.CreatedSocialMedia": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "the created at generated here"
                },
                "id": {
                    "type": "string",
                    "example": "the social media id generated here"
                },
                "name": {
                    "type": "string",
                    "example": "Example"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.example.com/johndoe"
                },
                "user_id": {
                    "type": "string",
                    "example": "here is the generated user id"
                }
            }
        },
        "utils.GetComment": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "message": {
                    "type": "string"
                },
                "photo": {
                    "$ref": "#/definitions/utils.Photo"
                },
                "photo_id": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/utils.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.GetPhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user": {
                    "$ref": "#/definitions/utils.User"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.LoggedinUser": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string",
                    "example": "the token generated here"
                }
            }
        },
        "utils.LoginUser": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "secret"
                }
            }
        },
        "utils.Photo": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.RegisterUser": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 8
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "password": {
                    "type": "string",
                    "example": "secret"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "utils.RegisteredUser": {
            "type": "object",
            "properties": {
                "age": {
                    "type": "integer",
                    "example": 8
                },
                "email": {
                    "type": "string",
                    "example": "johndoe@example.com"
                },
                "id": {
                    "type": "string",
                    "example": "the user id generated here"
                },
                "username": {
                    "type": "string",
                    "example": "johndoe"
                }
            }
        },
        "utils.ResponseDataCreatedComment": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.CreatedComment"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataCreatedPhoto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.CreatedPhoto"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataCreatedSocialMedia": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.CreatedSocialMedia"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataGetComment": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.GetComment"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataGetPhoto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.GetPhoto"
                    }
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataGetSocialMedia": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.SocialMedias"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataLoggedinUser": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.LoggedinUser"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataRegisteredUser": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.RegisteredUser"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataUpdatedComment": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.UpdatedComment"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataUpdatedPhoto": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.UpdatedPhoto"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseDataUpdatedSocialMedia": {
            "type": "object",
            "properties": {
                "data": {
                    "$ref": "#/definitions/utils.UpdatedSocialMedia"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseMessageComment": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "the error explained here"
                },
                "status": {
                    "type": "string",
                    "example": "fail"
                }
            }
        },
        "utils.ResponseMessageDeletedComment": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "your comment has been successfully deleted"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseMessageDeletedPhoto": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "your photo has been successfully deleted"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseMessageDeletedSocialMedia": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "your social media has been successfully deleted"
                },
                "status": {
                    "type": "string",
                    "example": "success"
                }
            }
        },
        "utils.ResponseMessagePhoto": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "the error explained here"
                },
                "status": {
                    "type": "string",
                    "example": "fail"
                }
            }
        },
        "utils.ResponseMessageSocialMedia": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "the error explained here"
                },
                "status": {
                    "type": "string",
                    "example": "fail"
                }
            }
        },
        "utils.ResponseMessageUser": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "string",
                    "example": "the error explained here"
                },
                "status": {
                    "type": "string",
                    "example": "fail"
                }
            }
        },
        "utils.SocialMedia": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string",
                    "example": "here is the generated created at"
                },
                "id": {
                    "type": "string",
                    "example": "here is the generated social media id"
                },
                "name": {
                    "type": "string",
                    "example": "Example"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.example.com/johndoe"
                },
                "updated_at": {
                    "type": "string",
                    "example": "here is the generated updated at"
                },
                "user": {
                    "$ref": "#/definitions/utils.User"
                },
                "user_id": {
                    "type": "string",
                    "example": "here is the generated user id"
                }
            }
        },
        "utils.SocialMedias": {
            "type": "object",
            "properties": {
                "social_medias": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/utils.SocialMedia"
                    }
                }
            }
        },
        "utils.UpdateComment": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string",
                    "example": "A new comment"
                }
            }
        },
        "utils.UpdatePhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string",
                    "example": "A new caption"
                },
                "photo_url": {
                    "type": "string",
                    "example": "https://www.example.com/new-image.jpg"
                },
                "title": {
                    "type": "string",
                    "example": "A new title"
                }
            }
        },
        "utils.UpdateSocialMedia": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "example": "New Example"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.newexample.com/johndoe"
                }
            }
        },
        "utils.UpdatedComment": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.UpdatedPhoto": {
            "type": "object",
            "properties": {
                "caption": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "photo_url": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "updated_at": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string"
                }
            }
        },
        "utils.UpdatedSocialMedia": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "example": "here is the generated social media id"
                },
                "name": {
                    "type": "string",
                    "example": "New Example"
                },
                "social_media_url": {
                    "type": "string",
                    "example": "https://www.newexample.com/johndoe"
                },
                "updated_at": {
                    "type": "string",
                    "example": "the updated at generated here"
                },
                "user_id": {
                    "type": "string",
                    "example": "here is the generated user id"
                }
            }
        },
        "utils.User": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "Bearer": {
            "description": "Description for what is this security definition being used",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "MyGram",
	Description:      "MyGram is a free photo sharing app written in Go. People can share, view, and comment photos by everyone. Anyone can create an account by registering an email address and creating a username.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
